// breakpoints

$S: 768px;
$M: 1024px;
$L: 1600px;

// media queries

@mixin MQ($canvas) {
    @if $canvas==S {
        @media only screen and (max-width: $S) {
            @content;
        }
    }

    @else if $canvas==M {
        @media only screen and (max-width: $M) {
            @content;
        }
    }

    @else if $canvas==L {
        @media only screen and (min-width: $M) {
            @content;
        }
    }
}

// super light grid - it works with the .cd-container class inside style.scss

@mixin column($percentage, $float-direction:left) {
    width: 100% * $percentage;
    float: $float-direction;
}

.page-wrapper {
    column-count: 3;
    column-gap: 2em;
    /*  grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: auto;
    grid-template-areas:
    "intro supporting supporting"
    "intro supporting supporting"*/
    column-fill: balance;

    @include MQ(M) {
        column-count: 2;
    }

    @include MQ(S) {
        column-count: 1;

    }
}

.intro header {
    column-span: all;
    text-align: center;
    margin-top: 15em;
    margin-bottom: 5em;

}

.intro {}

.main {}

.summary {
    break-inside: avoid;

    background-image: url(images/lego-building-top.svg);
    background-repeat: no-repeat;
    background-size: 100vw;
    padding-bottom: 2em;
    margin-bottom: -2em;
    padding-top: 1.5em;


    p {
        background-color: rgba(0, 0, 0, .8);
        padding: 0.5em;
        margin: 8px;
    }

    @include MQ(M) {
        background-repeat: repeat;
        background-image: url(images/lego-building.svg)
    }

    @include MQ(S) {
        background-repeat: no-repeat;
        background-size: cover;
        background-image: url(images/lego-building-small.svg);
        margin: 0 3em;
    }

}

.preamble {
    break-inside: avoid;
    background-image: url(images/lego-building.svg);
    background-repeat: no-repeat;
    background-size: 100vw;

    padding-bottom: 2em;
    margin-bottom: -2em;


    h3 {
        background-color: rgba(0, 0, 0, 1);
        padding: 0.25em;
        margin: 8px;
        text-align: center;
    }

    p {
        background-color: rgba(0, 0, 0, .8);
        padding: 0.5em;
        margin: 8px;
    }

    @include MQ(M) {
        background-repeat: repeat;
    }

    @include MQ(S) {
        background-repeat: no-repeat;
        background-size: cover;
        background-image: url(images/lego-building-small-nobump.svg);
        margin: 0 3em;
    }

}

.benefits {

    background-image: url(images/lego-building.svg);
    background-repeat: no-repeat;
    background-size: 100vw;
    margin-bottom: -6em;
    padding-bottom: 30em;

    h3 {
        background-color: rgba(0, 0, 0, 1);
        padding: 0.25em;
        margin: 8px;
        text-align: center;
    }

    p {
        background-color: rgba(0, 0, 0, .8);
        padding: 0.5em;
        margin: 8px;
    }

    @include MQ(M) {
        padding-bottom: 5.5em;
        background-repeat: repeat;
        margin-top: 0em;
        padding-top: 1.5em;
        break-inside: avoid;

    }

    @include MQ(S) {
        background-repeat: no-repeat;
        background-size: cover;
        background-image: url(images/lego-building-small-nobump.svg);
        margin: 0 3em;
    }

}


.explanation {
    break-inside: avoid;
    background-image: url(images/lego-building.svg);
    background-repeat: no-repeat;
    background-size: 100vw;
    padding-bottom: 4em;

    h3 {
        background-color: rgba(0, 0, 0, 1);
        padding: 0.25em;
        margin: 8px;
        text-align: center;
    }

    p {
        background-color: rgba(0, 0, 0, .8);
        padding: 0.5em;
        margin: 8px;
    }

    @include MQ(M) {
        padding-bottom: 2em;
        margin-bottom: -2em;
        background-repeat: repeat;

    }

    @include MQ(S) {
        background-repeat: no-repeat;
        background-size: cover;
        background-image: url(images/lego-building-small-nobump.svg);
        padding-bottom: 2em;
        margin-bottom: -2em;
        margin: 0 3em;
    }
}

.participation {
    break-inside: avoid;

    background-image: url(images/lego-building-top.svg);
    background-repeat: no-repeat;
    background-size:  100vw;
    padding-top: 1.5em;
    padding-bottom:  6em;
    margin-bottom:  -4em;


    h3 {
        background-color: rgba(0, 0, 0, 1);
        padding: 0.25em;
        margin: 8px;
        text-align: center;
    }

    p {
        background-color: rgba(0, 0, 0, .8);
        padding: 0.5em;
        margin: 8px;
    }

    @include MQ(M) {
        background-repeat: repeat;
        padding-bottom: 16.5em;
        background-image: url(images/lego-building.svg)
    }

    @include MQ(S) {
        background-repeat: no-repeat;
        background-size: cover;
        background-image: url(images/lego-building-small-nobump.svg);
        margin: 0 3em;
        padding-bottom: 2em;

    }

}

.requirements {
    break-inside: avoid;
    padding-top: 1.5em;
    background-image: url(images/lego-building-top.svg);
    background-size: 100vw;
    padding-bottom: 11em;


    h3 {
        background-color: rgba(0, 0, 0, 1);
        padding: 0.25em;
        margin: 8px;
        text-align: center;
    }

    p {
        background-color: rgba(0, 0, 0, .8);
        padding: 0.25em;
        margin: 8px;
    }

    @include MQ(M) {
        padding-bottom: 55em;
        background-image: url(images/lego-building.svg)
    }

    @include MQ(S) {
        padding-bottom: 5em;
        background-repeat: no-repeat;
        background-size: cover;
        background-image: url(images/lego-building-small-nobump.svg);
        margin: 0 3em;
    }

}

footer {
    column-span: all;
    text-align: center;

}

.wrapper {
    position: absolute;
    top: 0;
    width: 100vw;
}

.design-archives {
    display: none;
}

.zen-resources {
    column-span: all;
    text-align: center;
    margin-top: 5em;
}
